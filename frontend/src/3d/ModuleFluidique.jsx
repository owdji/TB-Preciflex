/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 module-fluidique-web.glb --transform 
Files: module-fluidique-web.glb [1.49MB] > /Users/gonin/Documents/HEIG/TB/website/frontend/src/3d/module-fluidique-web-transformed.glb [140.51KB] (91%)
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { MeshTransmissionMaterial } from '@react-three/drei'
import useSmoothLookAt from '../hooks/UseSmoothLookAt'

export function ModuleFluidique(props) {
  const { nodes, materials } = useGLTF('/module-fluidique-web-transformed.glb')
  const modelFluidiqueRef = useRef()

  useSmoothLookAt(modelFluidiqueRef)
  

  return (
    <group {...props} dispose={null} ref={modelFluidiqueRef}>
      {/* <mesh geometry={nodes.BASE001.geometry} material={materials['metal-web']} position={[0, -0.015, 0.002]} rotation={[Math.PI, -0.016, Math.PI]} scale={[0.003, 0.003, 0.007]} /> */}
      <mesh geometry={nodes.BASE001.geometry} material={materials['metal-web']} position={[0, -0.015, 0.002]} rotation={[Math.PI, -0.016, Math.PI]} scale={[0.003, 0.003, 0.007]} />


      <mesh geometry={nodes['cercle-tuyaux2001'].geometry} material={materials.black} position={[-0.002, -0.017, -0.005]} rotation={[Math.PI / 2, 0, 3.126]} scale={0.002} />
      <mesh geometry={nodes.liquide001.geometry} material={materials['Material.002']} position={[0, 0.002, -0.006]} rotation={[1.564, -0.398, 3.124]} scale={0.00201} />
      {/* <mesh geometry={nodes.Verre001.geometry} material={materials['Glass.001']} position={[0, 0.002, -0.006]} rotation={[Math.PI / 2, 0, 3.126]} scale={0.002} /> */}
      <mesh geometry={nodes.Verre001.geometry} position={[0, 0.002, -0.006]} rotation={[Math.PI / 2, 0, 3.126]} scale={0.002} >
        <MeshTransmissionMaterial transmissionSampler transmission={1} roughness={0}/>
      </mesh>
    </group>
  )
}

useGLTF.preload('/module-fluidique-web-transformed.glb')
